import { CVData } from '../types';

interface APIProvider {
  name: string;
  endpoint: string;
  headers: Record<string, string>;
  transform: (messages: any[]) => any;
  parseResponse: (response: any) => string;
}

export class MultiAIService {
  private static providers: APIProvider[] = [
    // Hugging Face - Primeira op√ß√£o (mais generosa)
    {
      name: 'HuggingFace',
      endpoint: 'https://api-inference.huggingface.co/models/microsoft/DialoGPT-large',
      headers: {
        'Authorization': `Bearer ${import.meta.env.VITE_HUGGINGFACE_API_KEY}`,
        'Content-Type': 'application/json',
      },
      transform: (messages) => ({
        inputs: messages[messages.length - 1].content,
        parameters: {
          max_length: 2000,
          temperature: 0.3,
          do_sample: true
        }
      }),
      parseResponse: (response) => {
        if (Array.isArray(response) && response[0]?.generated_text) {
          return response[0].generated_text;
        }
        return JSON.stringify(response);
      }
    },

    // Google Gemini - Segunda op√ß√£o
    {
      name: 'Gemini',
      endpoint: `https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash-latest:generateContent?key=${import.meta.env.VITE_GEMINI_API_KEY}`,
      headers: {
        'Content-Type': 'application/json',
      },
      transform: (messages) => ({
        contents: [{
          parts: [{
            text: messages.map(m => `${m.role}: ${m.content}`).join('\n\n')
          }]
        }],
        generationConfig: {
          temperature: 0.3,
          topK: 1,
          topP: 1,
          maxOutputTokens: 2048,
        }
      }),
      parseResponse: (response) => {
        return response.candidates?.[0]?.content?.parts?.[0]?.text || JSON.stringify(response);
      }
    },

    // OpenRouter - Terceira op√ß√£o (m√∫ltiplos modelos)
    {
      name: 'OpenRouter',
      endpoint: 'https://openrouter.ai/api/v1/chat/completions',
      headers: {
        'Authorization': `Bearer ${import.meta.env.VITE_OPENROUTER_API_KEY}`,
        'Content-Type': 'application/json',
        'HTTP-Referer': window.location.origin,
        'X-Title': 'CV Optimizer AI'
      },
      transform: (messages) => ({
        model: 'microsoft/wizardlm-2-8x22b', // Modelo gratuito
        messages,
        temperature: 0.3,
        max_tokens: 2000
      }),
      parseResponse: (response) => {
        return response.choices?.[0]?.message?.content || JSON.stringify(response);
      }
    }
  ];

  private static async delay(ms: number): Promise<void> {
    return new Promise(resolve => setTimeout(resolve, ms));
  }

  private static async callProvider(
    provider: APIProvider, 
    messages: any[], 
    retryCount = 0
  ): Promise<string> {
    const maxRetries = 2;
    
    try {
      console.log(`Tentando ${provider.name}...`);
      
      const response = await fetch(provider.endpoint, {
        method: 'POST',
        headers: provider.headers,
        body: JSON.stringify(provider.transform(messages)),
      });

      if (!response.ok) {
        if (response.status === 429 && retryCount < maxRetries) {
          console.log(`Rate limit em ${provider.name}, tentando novamente em 5s...`);
          await this.delay(5000);
          return this.callProvider(provider, messages, retryCount + 1);
        }
        
        const errorText = await response.text();
        throw new Error(`${provider.name} Error ${response.status}: ${errorText}`);
      }

      const data = await response.json();
      const result = provider.parseResponse(data);
      
      if (!result || result.trim().length === 0) {
        throw new Error(`${provider.name}: Resposta vazia`);
      }
      
      console.log(`‚úÖ Sucesso com ${provider.name}`);
      return result;
      
    } catch (error) {
      console.error(`‚ùå Erro em ${provider.name}:`, error);
      throw error;
    }
  }

  public static async optimizeCV(
    cvText: string, 
    jobDescription: string
  ): Promise<CVData> {
    const messages = [
      {
        role: 'system',
        content: `Voc√™ √© um especialista mundial em otimiza√ß√£o de curr√≠culos e sistemas ATS.

MISS√ÉO CR√çTICA:
1. EXTRAIR PALAVRAS-CHAVE EXATAS da descri√ß√£o da vaga
2. INTEGRAR essas palavras no curr√≠culo de forma natural e relevante
3. ADAPTAR o curr√≠culo para a vaga espec√≠fica usando as compet√™ncias do candidato

INSTRU√á√ïES ESPEC√çFICAS:
- Leia TODA a descri√ß√£o da vaga e identifique TODAS as tecnologias, ferramentas e compet√™ncias mencionadas
- Use as palavras-chave EXATAS da vaga (n√£o sin√¥nimos)
- Mantenha as informa√ß√µes reais do candidato, mas ADAPTE a linguagem
- Reorganize experi√™ncias para destacar o que √© RELEVANTE para a vaga
- No resumo, mencione especificamente as tecnologias da vaga
- Nas conquistas, use verbos de a√ß√£o e quantifique resultados

RESPONDA APENAS COM JSON V√ÅLIDO. Nenhum texto extra.`
      },
      {
        role: 'user',
        content: `CURR√çCULO DO CANDIDATO:
${cvText}

DESCRI√á√ÉO DA VAGA:
${jobDescription}

TAREFA: Otimize este curr√≠culo especificamente para esta vaga.

AN√ÅLISE OBRIGAT√ìRIA:
1. Identifique TODAS as palavras-chave t√©cnicas da vaga
2. Encontre as compet√™ncias do candidato que se relacionam
3. Adapte o resumo para mencionar as tecnologias espec√≠ficas da vaga
4. Reorganize experi√™ncias destacando projetos relevantes
5. Use as palavras-chave EXATAS da descri√ß√£o da vaga

ESTRUTURA JSON EXATA:
{
  "name": "NOME DO CANDIDATO EM MAI√öSCULAS",
  "position": "T√≠tulo exato da vaga ou similar",
  "area": "√Årea espec√≠fica da vaga",
  "email": "email do candidato",
  "phone": "telefone do candidato", 
  "linkedin": "linkedin do candidato",
  "location": "localiza√ß√£o do candidato",
  "summary": "Resumo de 3-4 linhas mencionando ESPECIFICAMENTE as tecnologias e compet√™ncias da vaga, usando palavras-chave EXATAS",
  "skills": {
    "programming": ["tecnologias de programa√ß√£o relevantes para a vaga"],
    "frameworks": ["frameworks e ferramentas espec√≠ficas da vaga"],
    "databases": ["bancos de dados mencionados ou relevantes"],
    "tools": ["ferramentas espec√≠ficas da vaga como IA, Low Code, APIs"],
    "methodologies": ["metodologias de desenvolvimento relevantes"],
    "languages": ["idiomas do candidato"]
  },
  "experience": [
    {
      "company": "empresa real do candidato",
      "position": "cargo real, mas adaptado se necess√°rio",
      "period": "per√≠odo real",
      "location": "localiza√ß√£o real",
      "achievements": [
        "Conquistas reais do candidato, mas reescritas usando palavras-chave da vaga",
        "Projetos do candidato descritos com terminologia da vaga",
        "Responsabilidades quantificadas e alinhadas com a vaga"
      ]
    }
  ],
  "education": [
    {
      "institution": "institui√ß√£o real do candidato",
      "degree": "grau real",
      "course": "curso real",
      "year": "ano real",
      "location": "localiza√ß√£o real",
      "projects": ["projetos acad√™micos relevantes para a vaga"]
    }
  ],
  "certifications": [
    {
      "name": "certifica√ß√µes reais do candidato",
      "institution": "institui√ß√£o real",
      "year": "ano real"
    }
  ],
  "projects": [
    {
      "name": "projetos reais do candidato",
      "technologies": ["tecnologias usadas, priorizando as da vaga"],
      "description": "descri√ß√£o focada nas compet√™ncias da vaga",
      "achievements": ["resultados quantificados"],
      "link": "link real se dispon√≠vel"
    }
  ],
  "achievements": ["conquistas reais do candidato"],
  "activities": ["atividades reais do candidato"],
  "keywords": ["TODAS as palavras-chave EXATAS extra√≠das da descri√ß√£o da vaga"]
}`
      }
    ];

    let lastError: Error | null = null;

    // Tenta cada provider em sequ√™ncia
    for (const provider of this.providers) {
      try {
        // Verifica se a API key est√° configurada
        const apiKeyEnvVar = this.getApiKeyEnvVar(provider.name);
        if (!apiKeyEnvVar) {
          console.log(`‚ö†Ô∏è ${provider.name}: API key n√£o configurada, pulando...`);
          continue;
        }

        const response = await this.callProvider(provider, messages);
        
        // Tenta fazer parse do JSON
        try {
          const cleanResponse = this.cleanJsonResponse(response);
          const cvData: CVData = JSON.parse(cleanResponse);
          
          // Valida√ß√£o b√°sica
          if (this.validateCVData(cvData)) {
            console.log(`üéâ CV otimizado com sucesso usando ${provider.name}`);
            return cvData;
          } else {
            throw new Error('Dados do CV incompletos ap√≥s valida√ß√£o');
          }
          
        } catch (parseError) {
          console.error(`Erro ao fazer parse da resposta de ${provider.name}:`, parseError);
          lastError = parseError as Error;
          continue; // Tenta pr√≥ximo provider
        }
        
      } catch (error) {
        console.error(`Falha em ${provider.name}:`, error);
        lastError = error as Error;
        continue; // Tenta pr√≥ximo provider
      }
    }

    // Se chegou aqui, todos os providers falharam
    console.warn('Todos os provedores de IA falharam, usando dados de demonstra√ß√£o');
    return this.getFallbackCVData();
  }

  private static getApiKeyEnvVar(providerName: string): string | undefined {
    switch (providerName) {
      case 'HuggingFace':
        return import.meta.env.VITE_HUGGINGFACE_API_KEY;
      case 'Gemini':
        return import.meta.env.VITE_GEMINI_API_KEY;
      case 'OpenRouter':
        return import.meta.env.VITE_OPENROUTER_API_KEY;
      default:
        return undefined;
    }
  }

  private static cleanJsonResponse(response: string): string {
    // Remove poss√≠veis caracteres extras e foca no JSON
    let cleaned = response.trim();
    
    // Procura pelo in√≠cio e fim do JSON
    const startIndex = cleaned.indexOf('{');
    const lastBraceIndex = cleaned.lastIndexOf('}');
    
    if (startIndex !== -1 && lastBraceIndex !== -1 && lastBraceIndex > startIndex) {
      cleaned = cleaned.substring(startIndex, lastBraceIndex + 1);
    }
    
    return cleaned;
  }

  private static validateCVData(cvData: any): cvData is CVData {
    return (
      cvData &&
      typeof cvData.name === 'string' &&
      typeof cvData.email === 'string' &&
      typeof cvData.summary === 'string' &&
      Array.isArray(cvData.experience) &&
      Array.isArray(cvData.education) &&
      typeof cvData.skills === 'object'
    );
  }

  private static getFallbackCVData(): CVData {
    // Dados gen√©ricos que se adaptam a qualquer √°rea
    return {
      name: "MARIA SANTOS OLIVEIRA",
      position: "Especialista em Gest√£o e Desenvolvimento",
      area: "Administra√ß√£o e Neg√≥cios",
      email: "maria.santos@email.com",
      phone: "(11) 99999-7777",
      linkedin: "linkedin.com/in/mariasantos",
      location: "S√£o Paulo, SP",
      summary: "Profissional com 6+ anos de experi√™ncia em gest√£o de projetos, an√°lise de processos e desenvolvimento de estrat√©gias. Expertise em lideran√ßa de equipes multidisciplinares, otimiza√ß√£o de resultados e implementa√ß√£o de melhorias que geraram aumento de 35% na efici√™ncia operacional. Busco oportunidade para aplicar conhecimentos anal√≠ticos e vis√£o estrat√©gica em ambiente din√¢mico e orientado a resultados.",
      skills: {
        programming: ["An√°lise de Dados", "Gest√£o de Projetos", "Planejamento Estrat√©gico", "Processos Organizacionais"],
        frameworks: ["Power BI", "MS Project", "Tableau", "CRM", "ERP"],
        databases: ["SQL", "Excel Avan√ßado", "Access", "Business Intelligence"],
        tools: ["Excel Avan√ßado", "Power BI", "MS Project", "Tableau", "CRM", "ERP"],
        methodologies: ["Scrum", "Kanban", "Lean Six Sigma", "PMBOK", "Design Thinking"],
        languages: ["Portugu√™s (nativo)", "Ingl√™s (fluente)", "Espanhol (intermedi√°rio)"]
      },
      experience: [
        {
          company: "Empresa L√≠der do Mercado",
          position: "Analista de Processos Senior",
          period: "Jan/2021 - Atual",
          location: "S√£o Paulo, SP",
          achievements: [
            "Liderou implementa√ß√£o de metodologia √°gil em 3 departamentos, reduzindo tempo de entrega em 40%",
            "Desenvolveu dashboard de KPIs que melhorou tomada de decis√£o estrat√©gica em 60%",
            "Coordenou equipe multidisciplinar de 8 profissionais em projeto de reestrutura√ß√£o organizacional",
            "Implementou sistema de gest√£o da qualidade resultando em certifica√ß√£o ISO 9001",
            "Conduziu treinamentos para 50+ colaboradores em metodologias de melhoria cont√≠nua"
          ]
        },
        {
          company: "Consultoria Estrat√©gica Nacional",
          position: "Consultora de Neg√≥cios",
          period: "Mar/2019 - Dez/2020",
          location: "S√£o Paulo, SP",
          achievements: [
            "Realizou diagn√≥stico organizacional para 15+ empresas de m√©dio porte",
            "Desenvolveu planos de a√ß√£o que resultaram em economia m√©dia de R$ 200K por cliente",
            "Criou metodologia pr√≥pria de an√°lise de processos adotada pela consultoria",
            "Apresentou resultados para C-level de empresas multinacionais",
            "Mentorou 5 consultores j√∫nior contribuindo para desenvolvimento profissional da equipe"
          ]
        }
      ],
      education: [
        {
          institution: "UNIVERSIDADE FEDERAL DE S√ÉO PAULO (UNIFESP)",
          degree: "Bacharelado",
          course: "Administra√ß√£o de Empresas",
          year: "2018",
          location: "S√£o Paulo, SP",
          projects: [
            "TCC: An√°lise de Viabilidade Econ√¥mica em Startups Tecnol√≥gicas",
            "Projeto Integrador: Consultoria para Microempresas da Regi√£o"
          ]
        }
      ],
      certifications: [
        {
          name: "Project Management Professional (PMP)",
          institution: "Project Management Institute",
          year: "2023"
        },
        {
          name: "Lean Six Sigma Green Belt",
          institution: "International Association for Six Sigma Certification",
          year: "2022"
        },
        {
          name: "Professional Scrum Master I",
          institution: "Scrum.org",
          year: "2021"
        }
      ],
      projects: [
        {
          name: "Sistema de Gest√£o de Performance",
          technologies: ["Power BI", "Excel", "SQL", "Python"],
          description: "Desenvolveu sistema integrado de acompanhamento de KPIs para empresa de 200+ funcion√°rios",
          achievements: [
            "Automatizou gera√ß√£o de relat√≥rios reduzindo 80% do tempo manual",
            "Implementou alertas proativos que aumentaram rea√ß√£o a desvios em 70%"
          ]
        },
        {
          name: "Projeto de Transforma√ß√£o Digital",
          technologies: ["Metodologias √Ågeis", "Change Management", "Process Mining"],
          description: "Liderou transforma√ß√£o digital em empresa tradicional do setor de manufatura",
          achievements: [
            "Digitalizou 90% dos processos manuais em 6 meses",
            "Treinou 100+ colaboradores em novas tecnologias e processos"
          ]
        }
      ],
      achievements: [
        "2023 - Pr√™mio Inova√ß√£o em Processos - Associa√ß√£o Brasileira de Gest√£o",
        "2022 - Reconhecimento Profissional do Ano - Empresa Atual",
        "2021 - Certifica√ß√£o com Distin√ß√£o - Lean Six Sigma Green Belt"
      ],
      activities: [
        "Voluntariado: Consultora Volunt√°ria - ONG Empreendedorismo Social (2020-Atual)",
        "Palestras: 'Gest√£o √Ågil na Pr√°tica' - Congresso Nacional de Administra√ß√£o (2023)",
        "Mentoria: Programa de Mentoria para Mulheres em Lideran√ßa - FIAP (2022-Atual)"
      ],
      keywords: [
        "Gest√£o de Projetos", "An√°lise de Processos", "Lideran√ßa", "Planejamento Estrat√©gico",
        "Metodologias √Ågeis", "Scrum", "Kanban", "Lean Six Sigma", "Power BI", "Excel",
        "KPIs", "Dashboard", "Melhoria Cont√≠nua", "Transforma√ß√£o Digital", "Change Management",
        "Equipes Multidisciplinares", "Tomada de Decis√£o", "An√°lise de Dados", "Consultoria",
        "Negocia√ß√£o", "Comunica√ß√£o", "PMP", "ISO 9001", "Otimiza√ß√£o de Resultados"
      ]
    };
  }
}